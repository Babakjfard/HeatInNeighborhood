"0","# First to remove the outlier node!"
"0","outlier.index <- which.min(nodes.spt$lon)"
"0","nodes.spt <- nodes.spt[-outlier.index,]"
"0","Stations <- Stations[-outlier.index,]"
"0","temp.daily <- temp.daily[,,-outlier.index]"
"0","# Now to eliminate BGs outside the containing box"
"0","this.area <-st_sfc(st_polygon(list(rbind(c(min(nodes.spt$lon), min(nodes.spt$lat)),"
"0","                             c(max(nodes.spt$lon), min(nodes.spt$lat)),"
"0","                             c(max(nodes.spt$lon), max(nodes.spt$lat)),"
"0","                             c(min(nodes.spt$lon), max(nodes.spt$lat)),"
"0","                             c(min(nodes.spt$lon), min(nodes.spt$lat)))))) %>% st_sf(relation_to_geometry = NA_character_)"
"0","st_crs(this.area) <- st_crs(chicago)"
"0","#st_crs(this.area) <- ""+proj=longlat +datum=NAD83 +no_defs"""
"0","new_chicago <- st_intersection(this.area, chicago)"
"2","although coordinates are longitude/latitude, st_intersection assumes that they are planar
"
"2","attribute variables are assumed to be spatially constant throughout all geometries"
"0","m2 <- mapview(nodes.spt, size=5, legend=FALSE, color=""red"", popup=popupTable(nodes.spt, zcol = c(""address"", ""node_id"")))"
"0","m3 <- mapview(new_chicago)"
"0","m2 + m3"
